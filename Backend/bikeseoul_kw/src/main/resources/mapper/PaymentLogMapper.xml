<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bikeseoul.bikeseoul_kw.dao.PaymentLogDao">
    <select id="getPaymentLogList" resultType="HashMap">
        SELECT
            log.uid,
            log.user_uid,
            log.method_uid,
            log.amount,
            log.ticket_detail_uid,
            log.status_,
            log.created_date AS log_created_date,
            log.updated_date AS log_updated_date,
            method.method_name,
            method.created_date AS method_created_date,
        FROM
            payment_log AS log
        JOIN
            payment_method AS method
        ON
            method.uid = log.method_uid
        WHERE
            log.user_uid = #{user_uid}
    </select>

    <select id="getRefundLogList" resultType="HashMap">
        SELECT
            log.uid,
            log.user_uid,
            log.method_uid,
            log.amount,
            log.ticket_detail_uid,
            log.status_,
            log.created_date AS log_created_date,
            log.updated_date AS log_updated_date,
            method.method_name,
            method.created_date AS method_created_date,
        FROM
            payment_log AS log
        JOIN
            payment_method AS method
        ON
            method.uid = log.method_uid
        WHERE
            log.user_uid = #{user_uid}
        AND
            log.status_ = 'refund'
    </select>
    <select id="getPaymentLogGiftUid" resultType="Integer">
        SELECT
            uid
        FROM
            ticket_gift
        WHERE
            ticket_uid = #{log_uid}
    </select>
    <select id="getPaymentMethodList" resultType="com.bikeseoul.bikeseoul_kw.container.PaymentMethod">
        SELECT
            uid,
            method_name,
            created_date
        FROM
            payment_method
        ORDER BY
        	created_date DESC
    </select>
    <select id="getPaymentMethodInfo" resultType="com.bikeseoul.bikeseoul_kw.container.PaymentMethod">
        SELECT
            uid,
            method_name,
            created_date
        FROM
            payment_method
        WHERE
        	uid = #{uid}
        ORDER BY
        	created_date DESC
    </select>
    	<insert id="insertPaymentLog" parameterType="com.bikeseoul.bikeseoul_kw.container.PaymentLog">
			INSERT INTO payment_log
				(
					user_uid,
					method_uid,
					amount,
					ticket_detail_uid,
					status_
				) VALUES (
					#{user_id},
					#{method_uid},
					#{amount},
					#{ticket_detail_uid},
					#{status_}
				)
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
	<insert id="insertPaymentLogGift" parameterType="Integer">
			INSERT INTO payment_log_gift
				(
					log_uid,
					gift_uid
				) VALUES (
					#{log_uid},
					#{gift_uid}
				)
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
</mapper>