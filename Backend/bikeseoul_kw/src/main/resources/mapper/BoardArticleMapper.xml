<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bikeseoul.bikeseoul_kw.dao.BoardArticleDao">
    <select id="getBoardArticleList" resultType="com.bikeseoul.bikeseoul_kw.container.BoardArticle">
        SELECT
            uid, board_uid, user_uid, title, content, created_date, updated_date
        FROM
            board_article
		<if test="board_uid > 0">
			WHERE
				board_uid = #{board_uid}
		</if>
        ORDER BY
            uid DESC
    </select>

    <select id="getBoardArticle" resultType="com.bikeseoul.bikeseoul_kw.container.BoardArticle">
        SELECT
            uid, board_uid, user_uid, title, content, created_date, updated_date
        FROM
            board_article
        WHERE
            uid = #{uid}
    </select>
    
    <select id="getAttachments" resultType="com.bikeseoul.bikeseoul_kw.container.Attachment">
    	SELECT
    		uid,
    		article_uid,
    		filename,
    		loc,
    		created_date
    	FROM
    		attachments
    	WHERE
    		article_uid = #{article_uid}
    </select>
    <select id="getAttachment" resultType="com.bikeseoul.bikeseoul_kw.container.Attachment">
    	SELECT
    		uid,
    		article_uid,
    		filename,
    		loc,
    		created_date
    	FROM
    		attachments
    	WHERE
    		article_uid = #{article_uid} AND
    		uid = #{att_uid}
    </select>
    <select id="getComments" resultType="com.bikeseoul.bikeseoul_kw.container.Comment">
    	SELECT
    		uid,
    		article_uid,
    		user_uid,
    		content,
    		created_date
    	FROM
    		board_comment
    	WHERE
    		article_uid = #{article_uid}
    </select>
    <select id="getComment" resultType="com.bikeseoul.bikeseoul_kw.container.Comment">
    	SELECT
    		uid,
    		article_uid,
    		user_uid,
    		content,
    		created_date
    	FROM
    		board_comment
    	WHERE
    		uid = #{cmt_uid}
    </select>
    <select id="getBoardInfo" resultType="com.bikeseoul.bikeseoul_kw.container.Board">
    	SELECT
    		uid,
    		board_name,
    		read_level,
    		write_level,
    		created_date,
    		updated_date
    	FROM
    		board
    	WHERE
    		<if test="uid > 0">
    			uid = #{uid}
    		</if>
    		<if test="uid == 0">
    			board_name = #{board_name}
    		</if>
    </select>
	<select id="getBoardList" resultType="com.bikeseoul.bikeseoul_kw.container.Board">
		SELECT
			uid,
			board_name,
			read_level,
			write_level,
			created_date,
			updated_date
		FROM
			board
		<if test="query != null">
			WHERE
				board_name=#{query}
		</if>
	</select>
    <insert id="writeBreakdown" parameterType="com.bikeseoul.bikeseoul_kw.container.Breakdown">
		<![CDATA[
			INSERT INTO breakdown
				(
					member_uid,
					bike_uid,
					break_type,
					content
				) VALUES (
					#{user_uid},
					#{board_uid},
					#{breaktype},
					#{content}
				)
		
		]]>
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
    <insert id="writeArticle" parameterType="com.bikeseoul.bikeseoul_kw.container.BoardArticle" >
		<![CDATA[
			INSERT INTO board_article
				(
					board_uid,
					user_uid,
					title,
					content
				) VALUES (
					#{board_uid},
					#{user_uid},
					#{title},
					#{content}
				)
		
		]]>
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
	 <insert id="writeNeglect" parameterType="com.bikeseoul.bikeseoul_kw.container.Neglect">
		<![CDATA[
			INSERT INTO neglect
				(
					article_uid,
					bike_uid,
					lat,
					lon,
					detail_address
				) VALUES (
					#{uid},
					#{bike_uid},
					#{lat},
					#{lon},
					#{detail_address}
				)
		
		]]>
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
	<insert id="writeAttachment" parameterType="com.bikeseoul.bikeseoul_kw.container.Attachment">
		<![CDATA[
			INSERT INTO attachments
				(
					article_uid,
					filename,
					loc
				) VALUES (
					#{article_uid},
					#{filename},
					#{loc}
				)
		
		]]>
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
	<insert id="writeComment" parameterType="com.bikeseoul.bikeseoul_kw.container.Comment">
		<![CDATA[
			INSERT INTO board_comment
				(
					article_uid,
					board_uid,
					content
				) VALUES (
					#{article_uid},
					#{board_uid},
					#{content}
				)
		
		]]>
		<selectKey resultType="Integer" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID() AS uid
		</selectKey>
	</insert>
	<delete id="deleteAttachment" parameterType="Integer" >
		<![CDATA[
			DELETE FROM
				attachments
			WHERE
				uid = #{uid}
		]]>
	</delete>
	<delete id="deleteComment" parameterType="Integer" >
		<![CDATA[
			DELETE FROM
				board_comment
			WHERE
				uid = #{uid}
		]]>
	</delete>
	<delete id="deleteArticle" parameterType="Integer" >
		<![CDATA[
			DELETE FROM
				board_article
			WHERE
				uid = #{uid} AND
				member_uid = #{member_uid}
		]]>
	</delete>
	<delete id="deleteBreakdown" parameterType="Integer" >
		<![CDATA[
			DELETE FROM
				breakdown
			WHERE
				uid = #{uid}
		]]>
	</delete>
	<delete id="deleteNeglect" parameterType="Integer" >
		<![CDATA[
			DELETE FROM
				neglect
			WHERE
				uid = #{uid}
		]]>
	</delete>
	<update id="updateBreakdown" parameterType="com.bikeseoul.bikeseoul_kw.container.Breakdown">
		UPDATE
			breakdown
		SET
			break_type = #{break_type},
			content = #{content},
			created_date = NOW()
		WHERE
			uid = #{uid} AND
			member_uid = #{user_uid}
	</update>
	<update id="updateArticle" parameterType="com.bikeseoul.bikeseoul_kw.container.BoardArticle">
		UPDATE
			board_article
		SET
			title = #{title},
			content = #{content},
			updated_date = NOW()
		WHERE
			uid = #{uid}
	</update>
	<update id="updateNeglect" parameterType="com.bikeseoul.bikeseoul_kw.container.Neglect">
		UPDATE
			neglect
		<trim prefix="SET" suffixOverrides=","> 
			<if test="lat > 0 and lon > 0">
				lat = #{lat},
				lon = #{lon},
			</if>
			<if test="detail_address != null">
				detail_address = #{detail_address},
			</if>
		</trim>
		WHERE
			article_uid = #{uid}
	</update>
	<update id="updateComment" parameterType="com.bikeseoul.bikeseoul_kw.container.Comment">
		UPDATE
			board_comment
		SET
			content = #{content},
			updated_date = NOW()
		WHERE
			uid = #{uid}
	</update>
</mapper>