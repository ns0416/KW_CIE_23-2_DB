<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bikeseoul.bikeseoul_kw.dao.RentDao">
    <select id="getRentList" resultType="com.bikeseoul.bikeseoul_kw.container.Rent">
        SELECT
            uid, member_uid, bike_uid, ticket_detail_uid, start_date, return_date, rent_station, return_station, last_position_lat, last_position_lon, distance, updated_date
        FROM
            rent
        <trim prefix="WHERE" suffixOverrides="AND|OR">
            	member_uid = #{member_uid}
           	<if test="start_date != null and end_date != null">
        		AND
            		return_date BETWEEN #{start_date} AND #{end_date}
            </if>
        </trim>
    </select>
    <select id="getOverdueList" resultType="HashMap">
        SELECT
			od.uid AS overdue_uid,
			od.overdue_amount AS overdue_amount,
			od.payment_finished AS payment_finished,
			od.created_date AS created_date,
			od.update_date AS update_date,
			r.uid AS uid,
			r.bike_uid AS bike_uid,
			r.ticket_detail_uid AS ticket_detail_uid,
			r.start_date AS start_date,
			r.return_date AS return_date,
			r.rent_station AS rent_station,
			r.return_station AS return_station,
			r.distance AS distance
        FROM
            overdue AS od
        JOIN
        	rent AS r
       	ON
       		od.rent_uid = r.uid
        WHERE
        	r.member_uid = #{member_uid} AND
        	od.payment_finished = #{payment_finished}
        ORDER BY
        	r.uid ASC
    </select>
</mapper>

